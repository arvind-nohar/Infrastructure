{
  servers {
    listener_wrappers {
      layer4 {
        # Route Postgres when SNI is the DB hostname
        @postgres tls sni testing.seventrees.nl
        route @postgres {
          # (optional but nice for PG 17+)
          tls {
            connection_policy {
              alpn postgresql
            }
          }
          # Your pooler is listening on 5434
          proxy pooler:5434
        }
      }
      tls
    }
  }
}

# Your normal HTTP sites go here as-is (L4 wrapper will peel off the DB SNI)
seven.seventrees.nl {
  encode gzip
  reverse_proxy host.docker.internal:5000 {
    flush_interval -1
  }
  header {
    X-Content-Type-Options nosniff
    Referrer-Policy no-referrer-when-downgrade
    Access-Control-Allow-Origin "*"
    Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers "Content-Type, Authorization"
  }
  @embed { query embed=true }
  handle @embed {
    header Access-Control-Allow-Origin "*"
    header Access-Control-Allow-Methods "GET, POST, OPTIONS"
    header Access-Control-Allow-Headers "Content-Type, Authorization"
    header -X-Frame-Options
    reverse_proxy host.docker.internal:5000 { flush_interval -1 }
  }
  @inject_script path /js/inject-chatbot.js
  handle @inject_script {
    header Access-Control-Allow-Origin "*"
    header Content-Type "application/javascript"
    header -X-Frame-Options
    reverse_proxy host.docker.internal:5000
  }
}
